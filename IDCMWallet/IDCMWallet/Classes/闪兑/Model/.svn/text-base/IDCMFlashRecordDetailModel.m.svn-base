//
//  IDCMFlashRecordDetailModel.m
//  IDCMWallet
//
//  Created by huangyi on 2018/3/22.
//  Copyright © 2018年 BinBear. All rights reserved.
//

#import "IDCMFlashRecordDetailModel.h"


@interface IDCMFlashRecordDetailModel ()
@property (nonatomic,strong) NSDictionary *timeDict;
@end


@implementation IDCMFlashRecordDetailModel
- (instancetype)handleModel {
    [self handleCashOutData];
    [self handleCashEnterData];
    [self handleTotalData];
    return self;
}

- (void)handleCashOutData {
    self.customerCashOut = [NSString stringWithFormat:@"%@ %@",
                           [self handleNumber:self.ToAmount fractionDigits:4],
                           [self.ToCurrency uppercaseString]];
    
    if ([self.ToMinCount integerValue] < [self.ToConfirmCount integerValue]) {
        self.customerCashEnterState = [NSString stringWithFormat:@"%@(%@/%@ %@)",
                                       NSLocalizedString(@"2.1_Ongoing", nil),
                                       self.ToConfirmCount,
                                       self.ToMinCount,
                                       NSLocalizedString(@"2.1_Confirmed", nil)];
        
    } else {
        self.customerCashEnterState = [NSString stringWithFormat:@"%@(%@ %@)",
                                       NSLocalizedString(@"2.0_Complete", nil),
                                       self.ToConfirmCount,
                                       NSLocalizedString(@"2.1_Confirmed", nil)];
    }
}

- (void)handleCashEnterData {
    self.customerCashEnter = [NSString stringWithFormat:@"%@ %@",
                             [self handleNumber:self.Amount fractionDigits:4],
                             [self.Currency uppercaseString]];
    
    if ([self.MinCount integerValue] < [self.ConfirmCount integerValue]) {
        self.customerCashEnterState = [NSString stringWithFormat:@"%@(%@/%@ %@)",
                                       NSLocalizedString(@"2.1_Ongoing", nil),
                                       self.ConfirmCount,
                                       self.MinCount,
                                       NSLocalizedString(@"2.1_Confirmed", nil)];
    } else {
        self.customerCashEnterState = [NSString stringWithFormat:@"%@(%@ %@)",
                                       NSLocalizedString(@"2.0_Complete", nil),
                                       self.ConfirmCount,
                                       NSLocalizedString(@"2.1_Confirmed", nil)];
    }
}

- (void)handleTotalData {
    self.customerExchangeOutFee = [NSString stringWithFormat:@"%@ %@",
                                  [self handleNumber:self.ToFee fractionDigits:4],
                                  [self.ToCurrency uppercaseString]];
    
    self.customerExchangeRate = [NSString stringWithFormat:@"1 %@ = %@ %@",
                                 self.Currency,
                                 [self handleNumber:self.ExchangeRate fractionDigits:4],
                                 self.ToCurrency];
    [self handleTime];
}

- (NSString *)handleNumber:(NSNumber *)number
            fractionDigits:(NSInteger)fractionDigits {
    
    NSString *precisionControlStr = [IDCMUtilsMethod precisionControl:number];
    NSDecimalNumber *decimalNumber = [NSDecimalNumber decimalNumberWithString:precisionControlStr];
    NSString *str = [NSString stringFromNumber:decimalNumber fractionDigits:fractionDigits];
    NSString *bitcoinString = [IDCMUtilsMethod separateNumberUseCommaWith:str];
    return bitcoinString;
}

- (void)handleTime {
    
    NSString *unit = SWLocaloziString([self.timeDict objectForKey:self.intervalUnit]);
    NSString *later = SWLocaloziString(@"2.1_Record_Time_Later_key");
    if ([self.CreateTime integerValue] > 1) {
        
        if ([[IDCMUtilsMethod getPreferredLanguage] isEqualToString:@"en"]) {
            unit = [NSString stringWithFormat:@"%@s",unit];
        }else{
            unit = [NSString stringWithFormat:@"%@",unit];
        }
    }
    
    if ([[IDCMUtilsMethod getPreferredLanguage] isEqualToString:@"zh-Hans"] ||
        [[IDCMUtilsMethod getPreferredLanguage] isEqualToString:@"zh-Hant"]) {
        self.customerExchangeTime = [NSString stringWithFormat:@"%@%@%@",nilHandleString(self.CreateTime),unit,later];
    }else{
        self.customerExchangeTime = [NSString stringWithFormat:@"%@ %@ %@",nilHandleString(self.CreateTime),unit,later];
    }
}

- (NSDictionary *)timeDict {
    return SW_LAZY(_timeDict, ({
        NSDictionary *dict = @{@"year":@"2.1_Record_Time_Year_key"
                               ,@"month":@"2.1_Record_Time_Month_key"
                               ,@"week":@"2.1_Record_Time_Week_key"
                               ,@"day":@"2.1_Record_Time_Day_key"
                               ,@"hour":@"2.1_Record_Time_Hour_key"
                               ,@"min":@"2.1_Record_Time_Min_key"
                               ,@"sec":@"2.1_Record_Time_Sec_key"
                               }; dict;
    }));
}

@end




