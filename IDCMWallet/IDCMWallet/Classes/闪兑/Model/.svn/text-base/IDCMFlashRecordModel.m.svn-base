//
//  IDCMExchangeListModel.m
//  IDCMWallet
//
//  Created by huangyi on 2018/3/22.
//  Copyright © 2018年 BinBear. All rights reserved.
//

#import "IDCMFlashRecordModel.h"
#import "IDCMUtilsMethod.h"


@interface IDCMFlashRecordModel ()
@property (nonatomic,strong) NSDictionary *timeDict;
@end


@implementation IDCMFlashRecordModel
+ (NSDictionary *)modelCustomPropertyMapper {
    return @{@"ID" : @"id"};
}

- (instancetype)handleModel {
    [self handleTime];
    [self handleExchangeInfo];
    [self handleState];
    return self;
}

- (void)handleExchangeInfo {
    self.customerCashOut = [NSString stringWithFormat:@"%@ %@",
                           [self handleNumber:self.ToAmount fractionDigits:4],
                           [self.ToCurrency uppercaseString]];
    
    self.customerCashEnter = [NSString stringWithFormat:@"%@ %@",
                             [self handleNumber:self.Amount fractionDigits:4],
                             [self.Currency uppercaseString]];
}

- (void)handleState {
    if ([self.MinCount integerValue] < [self.ConfirmCount integerValue]) {
        self.customerState = [NSString stringWithFormat:@"%@(%@/%@ %@)",
                              NSLocalizedString(@"2.1_Ongoing", nil),
                              self.ConfirmCount,
                              self.MinCount,
                              NSLocalizedString(@"2.1_Confirmed", nil)];
        
    } else {
        self.customerState = [NSString stringWithFormat:@"%@(%@ %@)",
                              NSLocalizedString(@"2.0_Complete", nil),
                              self.ConfirmCount,
                              NSLocalizedString(@"2.1_Confirmed", nil)];
    }
}

- (void)handleTime {
    //单位
    NSString *unit = SWLocaloziString([self.timeDict objectForKey:self.DateType]);
    //之前
    NSString *later = SWLocaloziString(@"2.1_Record_Time_Later_key");
    if ([self.Date integerValue] > 1) {
        
        if ([[IDCMUtilsMethod getPreferredLanguage] isEqualToString:@"en"]) {
            unit = [NSString stringWithFormat:@"%@s",unit];
        }else{
            unit = [NSString stringWithFormat:@"%@",unit];
        }
    }
    
    if ([[IDCMUtilsMethod getPreferredLanguage] isEqualToString:@"zh-Hans"] ||
        [[IDCMUtilsMethod getPreferredLanguage] isEqualToString:@"zh-Hant"]) {
        self.customerTime = [NSString stringWithFormat:@"%@%@%@",nilHandleString(self.Date),unit,later];
    }else{
        self.customerTime = [NSString stringWithFormat:@"%@ %@ %@",nilHandleString(self.Date),unit,later];
    }
}

- (NSString *)handleNumber:(NSNumber *)number
            fractionDigits:(NSInteger)fractionDigits {
    
    NSString *precisionControlStr = [IDCMUtilsMethod precisionControl:number];
    NSDecimalNumber *decimalNumber = [NSDecimalNumber decimalNumberWithString:precisionControlStr];
    NSString *str = [NSString stringFromNumber:decimalNumber fractionDigits:fractionDigits];
    NSString *bitcoinString = [IDCMUtilsMethod separateNumberUseCommaWith:str];
    return bitcoinString;
}

- (NSDictionary *)timeDict {
    return SW_LAZY(_timeDict, ({
    NSDictionary *dict = @{@"year":@"2.1_Record_Time_Year_key"
                           ,@"month":@"2.1_Record_Time_Month_key"
                           ,@"week":@"2.1_Record_Time_Week_key"
                           ,@"day":@"2.1_Record_Time_Day_key"
                           ,@"hour":@"2.1_Record_Time_Hour_key"
                           ,@"min":@"2.1_Record_Time_Min_key"
                           ,@"sec":@"2.1_Record_Time_Sec_key"
                           }; dict;
    }));
}

@end







